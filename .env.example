# Payment Service Configuration
PAYMENT_SERVICE_URL=http://localhost:3001/api/v1 # where your masumi-payment-service is running
PAYMENT_API_KEY=clean_installation_masumi_payment_service # for masumi-payment-service. can be your admin key, but better to create a payment API key

# Agent Configuration (update AGENT_IDENTIFIER after registering your agent)
AGENT_IDENTIFIER=replace_this_with_your_actual_identifier_recieved_after_registering_your_agent_via_your_masumi_payment_service
SELLER_VKEY=replace_with_your_seller_wallet_vkey # can be retrieved from your masumi-payment-service/wallets

# Network Configuration
NETWORK=Preprod # or Mainnet
PORT=8000 # default port for serving the service

# ─────────────────────────────────────────────────────────────────────────────
# CrewAI-Specific Configuration (Required for full CrewAI functionality)
# ─────────────────────────────────────────────────────────────────────────────

# OpenAI API Key (required for CrewAI agents)
# Get your key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-your-openai-api-key-here
OPENAI_MODEL=gpt-4.1-nano

# Optional: CrewAI Configuration
CREWAI_TELEMETRY_OPT_OUT=true
LANGCHAIN_TRACING_V2=false

# ─────────────────────────────────────────────────────────────────────────────
# Testing & Development
# ─────────────────────────────────────────────────────────────────────────────

# Run tests to validate your configuration:
# uv run python -m pytest test_api.py::TestMasumiCompliance -v  # API compliance
# uv run python -m pytest test_api.py::TestAgenticService -v   # CrewAI integration